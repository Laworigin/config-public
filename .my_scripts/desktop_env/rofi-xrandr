#!/usr/bin/env bash
#
# Originally copied from:
# https://github.com/leofa/dotfiles/blob/master/.local/bin/rofi-xrandr

XRANDR="$(command -v xrandr)"

mapfile -t MONITORS < <(${XRANDR} | awk '( $2 == "connected" ){ print $1 }')
NUM_MONITORS=${#MONITORS[@]}

TITLES=()
COMMANDS=()
declare -i index=0
TITLES[${index}]="Cancel"
COMMANDS[${index}]="true"
index+=1

gen_xrandr_only() {
  local selected="$1"
  local cmd="xrandr --output ${MONITORS[${selected}]} --auto "
  for entry in $(seq 0 $((NUM_MONITORS - 1))); do
    if [[ ${selected} != "${entry}" ]]; then
      cmd="${cmd} --output ${MONITORS[${entry}]} --off"
    fi
  done
  printf '%s\n' "${cmd}"
}

generate_entries() {
  for entry in $(seq 0 $((NUM_MONITORS - 1))); do
    TITLES[${index}]="Only  ${MONITORS[${entry}]}"
    COMMANDS[${index}]="$(gen_xrandr_only "${entry}")"
    index+=1
  done

  # Dual screen options
  for entry_a in $(seq 0 $((NUM_MONITORS - 1))); do
    for entry_b in $(seq 0 $((NUM_MONITORS - 1))); do
      if [[ ${entry_a} != "${entry_b}" ]]; then
        TITLES[${index}]="Dual  ${MONITORS[${entry_a}]} -> ${MONITORS[${entry_b}]}"
        COMMANDS[${index}]="xrandr --output ${MONITORS[${entry_a}]} --auto \
                --output ${MONITORS[${entry_b}]} --auto --left-of ${MONITORS[${entry_a}]}"

        index+=1
      fi
    done
  done

  # Clone monitors
  for entry_a in $(seq 0 $((NUM_MONITORS - 1))); do
    for entry_b in $(seq 0 $((NUM_MONITORS - 1))); do
      if [[ ${entry_a} != "${entry_b}" ]]; then
        TITLES[${index}]="Clone ${MONITORS[${entry_a}]} -> ${MONITORS[${entry_b}]}"
        COMMANDS[${index}]="xrandr --output ${MONITORS[${entry_a}]} --auto \
                --output ${MONITORS[${entry_b}]} --auto --same-as ${MONITORS[${entry_a}]}"

        index+=1
      fi
    done
  done
}

print_entries() {
  for i in $(seq 0 $((${#TITLES[@]} - 1))); do
    printf '%s\n' "${i} ${TITLES[i]}"
  done
}

generate_entries
for i in $(seq 0 $((${#TITLES[@]} - 1))); do
  printf '%s\n' "${i} ${TITLES[i]} : ${COMMANDS[i]}"
done
printf '\n'
# NOTE: The rofi command uses the `-i` flag to make the matching case
# insensitive.
selected_index="$(print_entries | rofi -dmenu -p "Display config:" -a 0 -no-custom -i | awk '{print $1}')"
xrandr_cmd="${COMMANDS[${selected_index}]}"
${xrandr_cmd}
