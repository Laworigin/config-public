// Generated by KLFC 1.5.5
// https://github.com/39aldo39/klfc

default
xkb_symbols "basic" {
    key <TLDE> { [        grave,   asciitilde ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND";
    key <AE01> { [            1,       exclam,           F1 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK01>,clearMods=LevelFive) ] };
    key <AE02> { [            2,           at,           F2 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK02>,clearMods=LevelFive) ] };
    key <AE03> { [            3,   numbersign,           F3 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK03>,clearMods=LevelFive) ] };
    key <AE04> { [            4,       dollar,           F4 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK04>,clearMods=LevelFive) ] };
    key <AE05> { [            5,      percent,           F5 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK05>,clearMods=LevelFive) ] };
    key <AE06> { [            6,  asciicircum,           F6 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK06>,clearMods=LevelFive) ] };
    key <AE07> { [            7,    ampersand,           F7 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK07>,clearMods=LevelFive) ] };
    key <AE08> { [            8,     asterisk,           F8 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK08>,clearMods=LevelFive) ] };
    key <AE09> { [            9,    parenleft,           F9 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK09>,clearMods=LevelFive) ] };
    key <AE10> { [            0,   parenright,          F10 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK10>,clearMods=LevelFive) ] };
    key <AE11> { [        minus,   underscore,          F11 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK11>,clearMods=LevelFive) ] };
    key <AE12> { [        equal,         plus,          F12 ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<FK12>,clearMods=LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AD01> { [            q,            Q,       Escape ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<ESC>,clearMods=LevelFive) ] };
    key <AD02> { [            w,            W,         Left ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<LEFT>,mods=Control,clearMods=LevelFive) ] };
    key <AD03> { [            e,            E,        Right ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<RGHT>,mods=Control,clearMods=LevelFive) ] };
    key.type[Group1] = "ALPHABETIC";
    key <AD04> { [            r,            R ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AD05> { [            t,            T,            t ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<AD05>,mods=Control,clearMods=LevelFive) ] };
    key <AD06> { [            y,            Y,        Prior ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<PGUP>,clearMods=LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALT+EXTEND_ALPHABETIC";
    key <AD07> { [            u,            U,            z,            Z ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<AB01>,mods=Control,clearMods=LevelFive), Redirect(key=<AB01>,mods=Shift+Control,clearMods=Alt+LevelFive) ] };
    key <AD08> { [            i,            I,           Up,        Prior ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<UP>,clearMods=LevelFive), Redirect(key=<PGUP>,clearMods=Alt+LevelFive) ] };
    key.type[Group1] = "ALPHABETIC";
    key <AD09> { [            o,            O ] };
    key <AD10> { [            p,            P ] };
    key.type[Group1] = "TWO_LEVEL";
    key <AD11> { [  bracketleft,    braceleft ] };
    key <AD12> { [ bracketright,   braceright ] };
    key <BKSL> { [    backslash,          bar ] };
    key.type[Group1] = "ALPHABETIC";
    key <AC01> { [            a,            A ] };
    key <AC02> { [            s,            S ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALT+EXTEND_ALPHABETIC";
    key <AC03> { [            d,            D,    BackSpace,       Delete ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<BKSP>,mods=Control,clearMods=LevelFive), Redirect(key=<DELE>,mods=Control,clearMods=Alt+LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AC04> { [            f,            F,            f ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<AC04>,mods=Control,clearMods=LevelFive) ] };
    key.type[Group1] = "ALPHABETIC";
    key <AC05> { [            g,            G ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AC06> { [            h,            H,         Next ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<PGDN>,clearMods=LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALT+EXTEND_ALPHABETIC";
    key <AC07> { [            j,            J,         Left,         Home ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<LEFT>,clearMods=LevelFive), Redirect(key=<HOME>,clearMods=Alt+LevelFive) ] };
    key <AC08> { [            k,            K,         Down,         Next ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<DOWN>,clearMods=LevelFive), Redirect(key=<PGDN>,clearMods=Alt+LevelFive) ] };
    key <AC09> { [            l,            L,        Right,          End ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<RGHT>,clearMods=LevelFive), Redirect(key=<END>,clearMods=Alt+LevelFive) ] };
    key.type[Group1] = "TWO_LEVEL";
    key <AC10> { [    semicolon,        colon ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND";
    key <AC11> { [   apostrophe,     quotedbl,         Menu ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<MENU>,clearMods=LevelFive) ] };
    key.type[Group1] = "ALPHABETIC";
    key <AB01> { [            z,            Z ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALT+EXTEND_ALPHABETIC";
    key <AB02> { [            x,            X,    BackSpace,       Delete ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<BKSP>,clearMods=LevelFive), Redirect(key=<DELE>,clearMods=Alt+LevelFive) ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND_ALPHABETIC";
    key <AB03> { [            c,            C,            c ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<AB03>,mods=Control,clearMods=LevelFive) ] };
    key <AB04> { [            v,            V,            v ],
                 actions[Group1] = [ NoAction(), NoAction(), Redirect(key=<AB04>,mods=Control,clearMods=LevelFive) ] };
    key.type[Group1] = "ALPHABETIC";
    key <AB05> { [            b,            B ] };
    key <AB06> { [            n,            N ] };
    key <AB07> { [            m,            M ] };
    key.type[Group1] = "TWO_LEVEL";
    key <AB08> { [        comma,         less ] };
    key <AB09> { [       period,      greater ] };
    key.type[Group1] = "NONE_SHIFT_EXTEND";
    key <AB10> { [        slash,     question,    Multi_key ] };
    key.type[Group1] = "NONE_EXTEND";
    key <ESC> { [       Escape,    Caps_Lock ],
                 actions[Group1] = [ NoAction(), LockMods(mods=Lock) ] };
    key <SPCE> { [        space,       Return ],
                 actions[Group1] = [ NoAction(), Redirect(key=<RTRN>,clearMods=LevelFive) ] };
    key.type[Group1] = "ONE_LEVEL";
    key <CAPS> { [ ISO_Level5_Shift ],
                 actions[Group1] = [ SetMods(mods=LevelFive) ],
                 vmods=LevelFive };
    modifier_map Mod3 { ISO_Level5_Shift };
};
