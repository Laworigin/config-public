# References that may be useful (didn't test):
# - https://github.com/regolith-linux/regolith-compositor-picom-glx/blob/master/config

shadow = false;
fading = false;

inactive-dim = 0.20;
inactive-dim-fixed = true;

# Try to detect WM windows (a non-override-redirect window with no child that
# has WM_STATE) and mark them as active.
mark-wmwin-focused = true;
# Mark override-redirect windows that don't have a child window with WM_STATE
# focused.
mark-ovredir-focused = true;
# Use EWMH _NET_ACTIVE_WINDOW to determine currently focused window, rather than
# listening to FocusIn/FocusOut event. Might have more accuracy, provided that
# the WM supports it.
use-ewmh-active-win = true;
# Try to detect windows with rounded corners and donâ€™t consider them shaped
# windows. The accuracy is not very high, unfortunately.
detect-rounded-corners = true;
# Detect _NET_WM_OPACITY on client windows, useful for window managers not
# passing _NET_WM_OPACITY of client windows to frame windows.
detect-client-opacity = true;
# Specify refresh rate of the screen. If not specified or 0, picom will try
# detecting this with X RandR extension.
refresh-rate = 0;
# Disable vsync.
vsync = false;
# Limit picom to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
sw-opti = true;
# Needed to avoid Chrome notifications popping up on top of i3lock. See also:
# https://github.com/i3/i3lock/issues/22
unredir-if-possible = true;
# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group
# focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group
# focused at the same time.  WM_TRANSIENT_FOR has higher priority if
# --detect-transient is enabled, too.
detect-client-leader = true;

# Backend to use: "xrender" or "glx".
# backend = "xrender";
backend = "glx";
# EXP: Setting glx-no-stencil to true which is recommended by the man page.
glx-no-stencil = true;

# Specify a list of conditions of windows that should always be considered
# focused.
focus-exclude = [
    "name = 'Notification'",
    "class_g ?= 'Notify-osd'",
    "class_g = 'Cairo-clock'",
    "class_g = 'i3bar'",
    "class_g = 'URxvt'"
];

# Specify a list of conditions of windows that should be painted with inverted
# color. Resource-hogging, and is not well tested.
invert-color-include = [ ];

# vim: set ft=conf :
