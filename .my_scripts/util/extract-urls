#!/usr/bin/env bash

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -o errexit -o errtrace -o nounset -o pipefail

# Adapted from: https://www.regextester.com/104038
IPV4_PART_REGEX='([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])'
IPV4_REGEX="$(printf '(%s\.){3}(%s)' "${IPV4_PART_REGEX}" "${IPV4_PART_REGEX}")"
IPV6_REGEX='((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?'

# Terminology and definitions from: https://tools.ietf.org/html/rfc3986
PCT_ENCODED='(%[a-f0-9]{2})'
UNRESERVED='[a-z0-9\-\._~]'
# GEN_DELIMS=':/\?#\[\]@'
SUB_DELIMS='[!\$&'"'"'\(\)\*\+,;=]'
USER_INFO="(${UNRESERVED}|${PCT_ENCODED}|${SUB_DELIMS}|:)*"
# shellcheck disable=SC2034
REG_NAME="(${UNRESERVED}|${PCT_ENCODED}|${SUB_DELIMS})*"
HOST="((${IPV4_REGEX})|(\[${IPV6_REGEX}\])|${REG_NAME})"
PORT='[0-9]+'
AUTHORITY="(${USER_INFO}@)?${HOST}(:${PORT})?"
# See https://stackoverflow.com/q/4669692/1014208
PCHAR="(${UNRESERVED}|${SUB_DELIMS}|${PCT_ENCODED})"
# PCHAR='a-z0-9\-\._~!\$&\(\)\*\+,;=:@'"'"
SEGMENT="${PCHAR}*"
SEGMENT_NZ="${PCHAR}+"
SEGMENT_NZ_NC="(${UNRESERVED}|${PCT_ENCODED}|${SUB_DELIMS}|@)+"
PATH_ABEMPTY="(/${SEGMENT})*"
PATH_ABSOLUTE="/(${SEGMENT_NZ}(/${SEGMENT})*)*"
PATH_NOSCHEME="${SEGMENT_NZ_NC}(/${SEGMENT})*"
PATH_ROOTLESS="${SEGMENT_NZ}(/${SEGMENT})*"
PATH_EMPTY=''
# shellcheck disable=SC2034
URL_PATH="(${PATH_ABEMPTY}|${PATH_ABSOLUTE}|${PATH_NOSCHEME}|${PATH_ROOTLESS}|${PATH_EMPTY})"
# shellcheck disable=SC2034
HIER_PART="((//${AUTHORITY}${PATH_ABEMPTY})|${PATH_ABSOLUTE}|${PATH_ROOTLESS}|${PATH_EMPTY})"
QUERY="(${PCHAR}|/|\?)*"
# shellcheck disable=SC2034
FRAGMENT="${QUERY}"

# Redefine the variables to be specific to localhost and ip addresses, which are
# the problematic inputs for urlextract.
HOST="((${IPV4_REGEX})|(\[${IPV6_REGEX}\])|localhost)"
AUTHORITY="(${USER_INFO}@)?${HOST}(:${PORT})?"
LOCALHOST_OR_IP_REGEX="\b(https?:)(//${AUTHORITY}${PATH_ABEMPTY})?(\?${QUERY})?(#${FRAGMENT})?\b"
# LOCALHOST_OR_IP_REGEX="$(printf '\\b(https?://)(\w+@)?(localhost|%s|\[%s\])(:[0-9]+)?(/%s)?' \
#   "${IPV4_REGEX}" "${IPV6_REGEX}" "${URL_PATH}")"

clean_urls() {
  # Remove braces and quotes that are often present when the URL is a markdown
  # link.
  # The first sed call removes trailing ')' (ending round brackets), and '"'
  # (double quotes).
  # The second sed call removes trailing single quotes.
  # The third sed call removes trailing ']' (ending square brackets).
  sed -r 's/[)"]$//' | sed -r "s/'$//" | sed -r 's/]$//'
}

remove_false_positives() {
  # Markdown files.
  grep -E -i -v '[a-z_-].(md|markdown)(:[0-9]+)?$'
}

extract_urls() {
  # urlextract doesn't support localhost and IP addresses, so we extract them
  # manually by grepping. `tee` is used to pipe stdin to both urlextract and
  # grep. See also:
  # - https://github.com/lipoja/URLExtract/issues/10
  # - https://unix.stackexchange.com/a/28519/126543
  tee >(conda-run urlextract urlextract --unique) \
    >(grep -E -o -i "${LOCALHOST_OR_IP_REGEX}" | sort -u) > /dev/null
}

main() {
  extract_urls | clean_urls | remove_false_positives
}

main "$@"
