#!/usr/bin/env bash

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -o errexit -o errtrace -o nounset -o pipefail

# shellcheck disable=SC2155
readonly REPO_ROOT="$([[ ${CONFIG_GET_ROOT:-0} == 1 ]] && config-repo-root "${BASH_SOURCE[0]}" || echo "${HOME}")"
# shellcheck source=../../.my_scripts/lib/platform_detection.sh
source -- "${REPO_ROOT}/.my_scripts/lib/platform_detection.sh"

_join_by() {
  local IFS="$1"
  shift
  echo "$*"
}

ENABLED_FEATURES=(
  # Add a button next to the extension icons that shows all extensions.
  'ExtensionsToolbarMenu'
  # Show native desktop notifications (chromium 89 and earlier).
  'NativeNotifications'
  # Show native desktop notifications (chromium 90 and later).
  # https://chromium.googlesource.com/chromium/src/+/c30c9ddff5c96efd8e2455d7435e49806526c155
  'SystemNotifications'
  # Add a button to show the current page in reader mode. The button is shown on
  # the right end of the address bar for some pages such as the Arch wiki.
  'ReaderMode'
  # Show the title of the active tab more prominently.
  'ProminentDarkModeActiveTabTitle'
  # Use a dark theme for chrome pages such as chrome://settings.
  'WebUIDarkMode'
  'VaapiVideoDecoder'
  # As of 2020-02-10, I stopped enabling TabGroups
  # 'TabGroups'
)
DISABLED_FEATURES=(
  # When an Omnibox search matches an existing tab, add a suggestions to switch
  # to it.
  'OmniboxTabSwitchSuggestions'
)

GENERIC_FLAGS=(
  # Without this, chromium stores passwords unencrypted, even though I have the
  # Secrets Service running.
  # https://rtfm.co.ua/en/chromium-linux-keyrings-secret-service-passwords-encryption-and-store/
  '--password-store=gnome'
  # NOTE(2018-10-16): Disabled because things are too small on hera17. The
  # automatic scaling prior to using this flag seemed to work better.
  # --force-device-scale-factor=1.2
  '--enable-dom-distiller'
  # Enables dark mode for all of Chrome's UI. I'm already using the
  # Material Dark theme [1], which changes the color of the top bar and tabs, but
  # this also changes the color of the menus (and maybe other UI elements).
  # [1] https://chrome.google.com/webstore/detail/material-dark/npadhaijchjemiifipabpmeebeelbmpd?hl=en
  '--force-dark-mode'
  # Configure `chrome://flags` experiments.
  # NOTE: All the features must be enabled/disabled in the same flag delimited by
  # commas.
  "--enable-features=$(_join_by ',' "${ENABLED_FEATURES[@]}")"
  "--disable-features=$(_join_by ',' "${DISABLED_FEATURES[@]}")"
)
GPU_FLAGS=(
  # EXP: use GPU acceleration for rasterization and/or video encode/decode. See:
  # - https://github.com/qutebrowser/qutebrowser/issues/5378#issuecomment-617931657
  # - https://wiki.archlinux.org/index.php/Hardware_video_acceleration
  # - https://wiki.debian.org/HardwareVideoAcceleration
  '--enable-gpu-rasterization'
  '--enable-accelerated-video-decode'
  '--use-gl=desktop'
  '--ignore-gpu-blocklist'
)

_should_enable_gpu_flags() {
  # Using is_nvidia_gpu is slow, apparently because it uses lshw, so we cache
  # the result.
  local cache_file="${XDG_RUNTIME_DIR}/chrome_use_gpu"
  if [[ -r "${cache_file}" ]]; then
    return "$(< "${cache_file}")"
  fi
  # Enable GPU flags unless there's an nvidia GPU
  local s=0
  if is_nvidia_gpu; then
    s=1
  fi
  echo $s >| "${cache_file}"
}

main() {
  local flags=("${GENERIC_FLAGS[@]}")
  if _should_enable_gpu_flags; then
    flags+=("${GPU_FLAGS[@]}")
  fi
  exec google-chrome --profile-directory='Home' "${flags[@]}" "$@"
}

main "$@"
